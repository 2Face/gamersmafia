<% generic_support do %>
<% end -%>

<% content_main do 
parsed_users = []
%>
<%mftext('Staff') do %>
<h2>Capos</h2>
<table>
<% User.find(:all, :conditions => 'is_bot = \'f\' and admin_permissions LIKE \'_____1%\'', :order => 'lower(login) asc').each do |u| 
parsed_users << u %>
<tr class="<%=oddclass%>">
<td class="timestamp"></td>
<td>&nbsp; &nbsp; &nbsp; <%="<strong><a href=\"#{gmurl(u)}\">#{u.login}</a></strong>"%></td>
</tr>
<% end -%>
</table>

<br />
<br />
<h2>Bosses y underbosses</h2>
<table>
<% Faction.find_unorphaned.each do |f|  
parsed_users << f.boss if f.boss
parsed_users << f.underboss if f.underboss %>
<tr class="<%=oddclass%>">
<td class="timestamp"><a href="<%=gmurl(f)%>"><%=f.name%></a></td>
<td><%=faction_favicon(f)%> &nbsp; <%="<strong><a href=\"#{gmurl(f.boss)}\">#{f.boss.login}</a></strong>" if f.boss%> <%=", <strong><a href=\"#{gmurl(f.underboss)}\">#{f.underboss.login}</a></strong>" if f.underboss%></td>
</tr>
<% end -%>
</table>

<br />
<br />
<h2>Otras Ã¡reas</h2>
<% perms = HashWithIndifferentAccess.new(User::ADMIN_PERMISSIONS_INDEXES)
perms.stringify_keys!
perms.keys.sort.each do |k|
	v = perms[k] 
	next if v == perms[:capo] || v == perms[:advertiser]
	str_cond = '_' * v
	str_cond<< '1%'
	users = User.find(:all, :conditions => "admin_permissions LIKE '#{str_cond}'", :order => 'login')
	if users.size > 0 then %>
	<h2><%=User::ADMIN_PERMISSIONS_INDEXES.index(v)%></h2>
	<table>
	<% users.each do |u| 
parsed_users << u%>
<tr class="<%=oddclass%>">
<td class="timestamp"></td>
<td>&nbsp; &nbsp; &nbsp; <%="<strong><a href=\"#{gmurl(u)}\">#{u.login}</a></strong>"%></td>
</tr>
	<% end %>
	</table>
	<% end %>
<%end%>

<br />
<br />
<h2>Webmaster</h2>
<table>
	
<%
u = User.find(1)
parsed_users << u
%>
<tr class="<%=oddclass%>">
<td class="timestamp"></td>
<td>&nbsp; &nbsp; &nbsp; <%="<strong><a href=\"#{gmurl(u)}\">#{u.login}</a></strong>"%></td>
</tr>
</table>

<br />
<br />
<h2>Usuarios VIP</h2>
<table>
<% User.find(:all, :conditions => "is_hq = 't' and id not in (#{parsed_users.collect {|u| u.id}.join(',')})", :order => 'lower(login) asc').each do |u| %>
<tr class="<%=oddclass%>">
<td class="timestamp"></td>
<td>&nbsp; &nbsp; &nbsp; <%="<strong><a href=\"#{gmurl(u)}\">#{u.login}</a></strong>"%></td>
</tr>
<% end -%>
</table>
<% end -%>
<% end -%>

<%
slog_entries_filter = { :domain => @domain, :scope => @scope }
pager = ActionController::Pagination::Paginator.new(self, SlogEntry.ccount(:closed, slog_entries_filter), 50, params[:page])
pager.current_page = pager.first if params['page'].nil?
slog_entries_filter[:limit] = pager.current.to_sql[0]
slog_entries_filter[:offset] = pager.current.to_sql[1]
slog_entries_filter[:include] = [:reviewer, :reporter]
slog_entries_filter[:order] = 'slog_entries.id DESC'
%>
<%= render :partial => 'shared/pager', :object => pager, :locals => {:pos => 'top', :options => { :preserve_keys => [:domain, :scope], :params => {:domain => @domain, :scope => @scope} }} %>
<table>
	<tr class="<%=oddclass%>">
		<th style="width: 16px;"></th>
		<th class="w125 centered infoinline">Creada</th>
		<th>Suceso</th>
		<th>Reportero</th>
		<th>Ejecutor</th>
		<th class="w125 centered infoinline">Completada</th>
</tr>
<% SlogEntry.get(:closed, slog_entries_filter).each do |sle| %>
<tr class="<%=oddclass%>">
	<td style="width: 16px;"><img class="sprite1 slog-type<%=sle.type_id%>" src="/images/blank.gif" /></td>
	<td class="w125 centered infoinline"><%=print_tstamp(sle.created_on, 'compact')%></td>
	<td><%=sle.headline%></td>
	<td class="infoinline"><%=user_link(sle.reporter) if sle.reporter%></td>
	<td class="infoinline"><%=user_link(sle.reviewer) if sle.reviewer%></td>
	<td class="w125 centered infoinline"><%=print_tstamp(sle.completed_on, 'compact')%></td>
</tr>
<% end -%>
</table>
<%= render :partial => 'shared/pager', :object => pager, :locals => {:pos => 'bottom', :options => { :preserve_keys => [:domain, :scope], :params => {:domain => @domain, :scope => @scope} }} %>
1. INSTALACIÓN

Pasos:
1. Instala la última versión de 64bits de Ubuntu Server en una máquina virtual
   de tu elección y crea un usuario llamado "unnamed".

2. Copia y pega las siguientes 3 líneas en una terminal:

wget https://raw.github.com/slnc/gamersmafia/production/script/bootstrap_gm.sh
chmod u+x bootstrap_gm.sh
./bootstrap_gm.sh

3. Sigue las instrucciones en pantalla para editar tu archivo hosts y acceder a
tu versión de desarrollo de GM.

Si vas a colaborar necesitarás crearte una cuenta en github y clonar el
repositorio, instrucciones más abajo.


2. COMO COLABORAR
2.1 Lee todas las guías de http://guides.rubyonrails.org/

¿Cómo saber si ya has leído suficiente?
- Sabes crear una aplicación rails desde cero
- Sabes cómo crear nuevos modelos, controladores y resources
- Sabes modificar vistas, añadir atributos a un modelo y modificar las vistas
    correspondientes.
- Sabes para qué escribir tests y la diferencia entre unit tests, functional
    tests e integration tests
- Sabes escribir tests de cada tipo


2.2 Aprende a usar Git (http://git-scm.com/documentation) y github
    (http://github.com/guides/home).
¿Cómo saber si ya has leído suficiente?
- Sabes qué hace Git
- Sabes crear un repositorio desde cero
- Sabes clonar un repositorio existente
- Sabes qué es una branch
- Sabes cómo crear una branch y cómo hacer merge posteriormente

2.2.1 Branches en GM
En GM la rama por defecto se llama "production" en lugar de "master".


2.3 ¡Estoy listo!
Pasos:
1- Asegúrate de que el bug que vas a corregir o la funcionalidad a añadir ha
   sido aprobada por slnc. Temporalmente vamos a seguir usando JIRA (
   http://hq.gamersmafia.com ) para llevar el control de incidencias pero la
   idea es migrar a http://lighthouseapp.com/ en las próximas semanas.

   De momento si ves una incidencia en JIRA de tipo bug por defecto asume que
   está "aprobada". Si no es un bug lo más seguro es dejar un comentario y en
   cuanto slnc dé el visto bueno adelante con ella.


2- Desde "production" crea una nueva rama con el nombre de la incidencia.
   Si es una incidencia de JIRA el nombre sería "gm-1000" si vas a trabajar en
   la incidencia con dicho código. Ejemplo:

   Imprescindible: clona el repositorio "Gamersmafia" en Github a tu propia
   cuenta.

    git clone git@github.com:TUNICK/gamersmafia.git

    cd gamersmafia
    git checkout production
    git checkout -b gm-1000
    # modificar código
    # git add nuevo_archivo1 nuevo_archivo2
    git commit -m "GM-1000: Título completo de la incidencia"
    git push origin gm-1000
    # crea un pull request o si lo prefieres mándale un email a slnc para
    avisarle git checkout production

    # Listo para trabajar en la siguiente incidencia. Cuando slnc vea el commit
    # tu pull request si está todo bien actualizará production y cuando eso
    # ocurra podrás ejecutar "git pull" desde production y verás el cambio en
    # esa rama.
